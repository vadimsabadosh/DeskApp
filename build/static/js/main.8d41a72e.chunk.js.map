{"version":3,"sources":["components/ErrorBoundary/ErrorBoundary.js","components/DeskItem.js","components/DeskList.js","components/FormCreate.js","components/DeskCreate.js","components/Desks.js","components/ColumnCard.js","components/CardCreate.js","components/Cards.js","components/Column.js","components/ColumnCreate.js","components/Columns.js","components/App.js","router/index.js","index.js","models/firebase.js"],"names":["ErrorBoundary","props","state","hasError","stack","message","error","errorInfo","console","log","this","onClick","window","location","reload","children","React","Component","DeskItem","id","onDelete","size","className","mode","firebase","firestore","collection","doc","delete","then","catch","DeskList","desks","onLoadDesks","onDesksClick","useEffect","get","querySnapshot","forEach","push","name","data","length","map","key","modes","statuses","FormCreate","onSubmit","placeholder","actionTitle","useState","setMode","setName","status","setStatus","reset","submit","event","preventDefault","trim","stretched","before","width","height","autoFocus","value","onChange","target","DeskCreate","onCreate","add","docRef","Desks","onChangePanel","addDesk","removeDesk","setDesks","ColumnCard","CardCreate","columnId","Cards","cards","setCards","removeCards","removeId","filter","where","columnID","card","Column","setPopout","deleteColumn","osname","usePlatform","onClose","autoclose","IOS","ColumnCreate","deskId","Columns","goBack","setColumns","columns","removeColumn","addColumn","desk","left","slideWidth","align","panels","App","router","activePanel","setActivePanel","activeDesk","setActiveDesk","popout","useRoute","header","find","column","routes","path","route","createRouter","usePlugin","browserPlugin","start","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d41a72e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            hasError: false,\r\n            stack: null,\r\n            message: null\r\n        }\r\n    }\r\n    static getDerivedStateFromError(error){\r\n        return { hasError: true, stack: error.stack, message: error.message };\r\n    }\r\n    componentDidCatch(error, errorInfo){\r\n        console.log(error, errorInfo);\r\n    }\r\n   \r\n    render() {\r\n        if(this.state.hasError){\r\n            return(\r\n                <div>\r\n                    <h1>\r\n                        Что-то произошло не так...\r\n                    </h1>\r\n                    <button onClick={() => window.location.reload()}>\r\n                        Перезагрузить страницу\r\n                    </button>\r\n                </div>\r\n            );\r\n        }\r\n        return this.props.children;\r\n        \r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Card, Div, Button} from '@vkontakte/vkui';\r\nimport firebase from 'firebase/app';\r\nimport './Deskitem.css';\r\n\r\nconst  DeskItem =({id, children, onDelete, onClick})=>{\r\n\r\n    \r\n    \r\n        const removeItem = () => {\r\n            const db = firebase.firestore();\r\n            // Add a new document in collection \"cities\"\r\n            db.collection(\"desks\")\r\n            .doc(id)\r\n            .delete()\r\n            .then(() => onDelete(id))\r\n            .catch(console.error)\r\n        }\r\n\r\n    \r\n\r\n    return (\r\n        <Card size=\"l\" onClick={onClick}>\r\n            \r\n                <Div className='DeskItem_content'>{children}\r\n                    <Button mode='destructive' onClick={removeItem}>Удалить</Button>\r\n                </Div>\r\n                \r\n            \r\n            \r\n        </Card>\r\n    )\r\n}\r\n\r\nDeskItem.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n    children: PropTypes.oneOfType([PropTypes.node, PropTypes.arrayOf(PropTypes.node)]).isRequired,\r\n    onClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default DeskItem;","import React, {useEffect} from 'react';\r\nimport DeskItem from './DeskItem';\r\nimport { CardGrid} from '@vkontakte/vkui';\r\nimport PropTypes from 'prop-types';\r\nimport firebase from 'firebase/app';\r\n\r\n\r\nconst DeskList = ({desks, onDelete, onLoadDesks, onDesksClick}) => {\r\n\r\n    //Запрос в базу данных за досками\r\n    useEffect(()=>{\r\n        const db = firebase.firestore();\r\n        \r\n        db.collection(\"desks\").get().then((querySnapshot) => {\r\n            const desks = [];\r\n            querySnapshot.forEach((doc) => {\r\n                desks.push({\r\n                id: doc.id,\r\n                name: doc.data().name,\r\n                });\r\n            });\r\n            onLoadDesks(desks);\r\n        });\r\n    }, []);\r\n    ////\r\n\r\n    if(!desks.length){\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <CardGrid>\r\n            {desks.map(({id, name}) => (\r\n            <DeskItem \r\n            onClick={() => onDesksClick(id)} \r\n            key={id} \r\n            id={id} \r\n            onDelete={onDelete}>\r\n                {name}\r\n                </DeskItem>\r\n                ))}\r\n\r\n        </CardGrid>\r\n    )\r\n\r\n}\r\n\r\nDeskList.propTypes = {\r\n    desks: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n    })).isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n    onLoadDesks: PropTypes.func.isRequired,\r\n    onDesksClick: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default DeskList;","import React, {useState} from 'react';\r\nimport { Button, Div, Card, FormLayout, Input } from '@vkontakte/vkui';\r\nimport Icon28AddSquareOutline from '@vkontakte/icons/dist/28/add_square_outline';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modes = {\r\n    button: 'button',\r\n    form: 'form'\r\n}\r\nconst statuses ={\r\n    default: 'default',\r\n    error: 'error'\r\n}\r\nconst FormCreate = ({ onSubmit, placeholder, actionTitle }) => {\r\n\r\n    const [mode, setMode] = useState(modes.button); // Значение появление формы или кнопки по уморлчанию\r\n    const [name, setName] = useState('');\r\n    const [status, setStatus] = useState(statuses.default);\r\n\r\n    const reset = () => {\r\n        setStatus(statuses.default);\r\n\r\n        setName('');\r\n        setMode(modes.button);\r\n    }\r\n\r\n    const submit = (event) => {\r\n        if(event){\r\n            event.preventDefault();\r\n        }\r\n        if(!name.trim().length){\r\n            setStatus(statuses.error);\r\n            return;\r\n        }\r\n        onSubmit(name).then(reset);\r\n    }\r\n\r\n    if (mode === modes.button){\r\n        return (\r\n            <Div>\r\n                <Button \r\n                    onClick={() => setMode(modes.form)} \r\n                    size=\"l\" \r\n                    mode=\"primary\"\r\n                    stretched \r\n                    before={\r\n                    <Icon28AddSquareOutline width={24} height={24}/>\r\n                    }>{actionTitle}\r\n                    </Button>\r\n            </Div>\r\n        )\r\n    }\r\n    return (\r\n        <Div>\r\n            <Card size=\"l\" mode=\"shadow\">\r\n                <FormLayout onSubmit={submit}>\r\n                    <Input \r\n                    autoFocus \r\n                    value={name} \r\n                    onChange={(event) => setName(event.target.value)} \r\n                    status={status}\r\n                    placeholder={placeholder}/>\r\n\r\n                    <div>\r\n                        <Button onClick={submit}>{actionTitle}</Button>\r\n                        <Button onClick={reset} mode=\"tertiary\">Отменить</Button>\r\n                    </div>\r\n                    \r\n                </FormLayout>\r\n            </Card>\r\n        </Div>\r\n    )\r\n}\r\n\r\nFormCreate.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    actionTitle: PropTypes.string.isRequired\r\n}\r\n\r\nexport default FormCreate;","import React, {useState} from 'react';\r\n\r\nimport firebase from 'firebase/app';\r\nimport PropTypes from 'prop-types';\r\nimport FormCreate from './FormCreate';\r\n\r\n\r\n\r\nconst DeskCreate = ({ onCreate }) => {\r\n\r\n   \r\n    const createDesk = ( name) => {\r\n        \r\n\r\n        const db = firebase.firestore();\r\n        // Add a new document in collection \"cities\"\r\n        return db.collection(\"desks\")\r\n        .add({ name })\r\n        .then((docRef) => docRef.get())\r\n        .then(doc => {\r\n            onCreate({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            });\r\n            \r\n        })\r\n        .catch(function(error) {\r\n            console.error(\"Error writing document: \", error);\r\n        });\r\n\r\n        \r\n        \r\n    };\r\n\r\n    \r\n    return (\r\n        \r\n            <FormCreate \r\n            onSubmit={createDesk} \r\n            placeholder='Введите название доски' \r\n            actionTitle='Создать доску'/>\r\n        \r\n    )\r\n}\r\n\r\nDeskCreate.propTypes = {\r\n    onCreate: PropTypes.func.isRequired\r\n}\r\n\r\nexport default DeskCreate;","import React, {Fragment, useState, useEffect} from 'react';\r\nimport {PanelHeaderSimple} from '@vkontakte/vkui';\r\nimport PropTypes from 'prop-types';\r\nimport DeskList from './DeskList';\r\nimport DeskCreate from './DeskCreate';\r\n\r\nconst Desks = ({onChangePanel, addDesk, desks, removeDesk, setDesks}) => {\r\n\r\n\r\n    \r\n    \r\n\r\n    return (\r\n        <Fragment>\r\n            <PanelHeaderSimple>Мои доски</PanelHeaderSimple>\r\n            \r\n            <DeskCreate onCreate={addDesk}/>\r\n            \r\n            <DeskList desks={desks} onDelete={removeDesk} onLoadDesks={setDesks} onDesksClick={onChangePanel}/>\r\n\r\n            \r\n        </Fragment>\r\n    )\r\n};\r\n\r\nDesks.propTypes = {\r\n    onChangePanel: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Desks;","import React from 'react';\r\nimport {Card, Div, Button} from '@vkontakte/vkui';\r\nimport PropTypes from 'prop-types';\r\nimport './ColumnCard.css';\r\nimport firebase from 'firebase/app';\r\nimport Icon16CancelCircleOutline from '@vkontakte/icons/dist/16/cancel_circle_outline';\r\n\r\nconst ColumnCard = ({ children, id, onDelete }) => {\r\n\r\n    const deleteCard = () => {\r\n        \r\n        const db = firebase.firestore();\r\n        // Add a new document in collection \"cities\"\r\n        db.collection(\"cards\")\r\n        .doc(id)\r\n        .delete()\r\n        .then(() => onDelete(id))\r\n        .catch(console.error)\r\n    \r\n    };\r\n\r\n    return (\r\n    <Card  size=\"l\">\r\n        <Div className='ColumnCard-wrapper'>\r\n                {children} \r\n                <Button  onClick={deleteCard} mode='tertiary' className='btn-card' before={<Icon16CancelCircleOutline/>}></Button>\r\n        </Div>\r\n    </Card>\r\n    )\r\n}\r\nColumnCard.propTypes = {\r\n   children : PropTypes.node.isRequired\r\n}\r\nexport default ColumnCard;","import React, {useState} from 'react';\r\n\r\nimport firebase from 'firebase/app';\r\nimport PropTypes from 'prop-types';\r\nimport FormCreate from './FormCreate';\r\n\r\n\r\n\r\nconst CardCreate = ({ onCreate, columnId }) => {\r\n\r\n   \r\n    const createCard = ( name) => {\r\n        \r\n\r\n        const db = firebase.firestore();\r\n        // Add a new document in collection \"cities\"\r\n        return db.collection(\"cards\")\r\n        .add({ name, columnId })\r\n        .then((docRef) => docRef.get())\r\n        .then(doc => {\r\n            onCreate({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            });\r\n            \r\n        })\r\n        .catch(function(error) {\r\n            console.error(\"Error writing document: \", error);\r\n        });\r\n        \r\n    };\r\n\r\n    \r\n    return (\r\n        \r\n            <FormCreate \r\n            onSubmit={createCard} \r\n            placeholder='Введите название карточки' \r\n            actionTitle='Создать карточку'/>\r\n        \r\n    )\r\n}\r\n\r\nCardCreate.propTypes = {\r\n    onCreate: PropTypes.func.isRequired,\r\n    columnId: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default CardCreate;","import React, {Fragment, useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ColumnCard from  './ColumnCard';\r\nimport { CardGrid, Div } from '@vkontakte/vkui';\r\nimport firebase from 'firebase';\r\nimport CardCreate from './CardCreate';\r\nimport './Cards.css';\r\n\r\nconst Cards = ( {columnId }) => {\r\n    const [cards, setCards] = useState([]);\r\n     const addCards = (card) => setCards([...cards, card]);\r\n    const removeCards = (removeId) => setCards(cards.filter(({ id }) => id !== removeId));\r\n\r\n    useEffect(()=>{\r\n\r\n        //Запрос в базу данных за колонками\r\n        const db = firebase.firestore();\r\n        \r\n        db.collection(\"cards\").where('columnId', '==', columnId).get().then((querySnapshot) => {\r\n            const cards = [];\r\n            querySnapshot.forEach((doc) => {\r\n                const {columnID, name} = doc.data();\r\n                cards.push({\r\n                id: doc.id,\r\n                columnID,\r\n                name,\r\n\r\n                });\r\n            });\r\n            setCards(cards);\r\n        });\r\n    }, []);\r\n    return (\r\n        <CardGrid>   \r\n            {cards.map( ({ id, name }) => <ColumnCard id={id} key={id} onDelete={removeCards}>{name}</ColumnCard> )}  \r\n            \r\n            <div className='Card-wrapper'>\r\n                <CardCreate columnId={columnId} onCreate={addCards}></CardCreate>\r\n            </div>\r\n            \r\n        </CardGrid>\r\n    )\r\n}\r\nCards.propTypes = {\r\n    columnId: PropTypes.string.isRequired\r\n}\r\nexport default Cards;","import React from 'react';\r\nimport {Header, Div, Card, Button, ActionSheet, ActionSheetItem, usePlatform, IOS} from '@vkontakte/vkui';\r\nimport PropTypes from 'prop-types';\r\nimport './Column.css';\r\nimport Cards from './Cards';\r\nimport firebase from 'firebase/app';\r\nimport './Style.css';\r\nimport Icon24MoreHorizontal from '@vkontakte/icons/dist/24/more_horizontal';\r\n\r\nconst Column = ( { name, id, onDelete, setPopout } ) => {\r\n\r\n    const deleteColumn = () => {\r\n        \r\n            const db = firebase.firestore();\r\n            // Add a new document in collection \"cities\"\r\n            db.collection(\"columns\")\r\n            .doc(id)\r\n            .delete()\r\n            .then(() => onDelete(id))\r\n            .catch(console.error)\r\n        \r\n    };\r\n    const osname = usePlatform();\r\n\r\n    const showPopupColumn = () => {\r\n        const close = () => setPopout(null);\r\n        setPopout((\r\n            <ActionSheet onClose={close}>\r\n            \r\n            <ActionSheetItem autoclose mode=\"destructive\" onClick={deleteColumn}>\r\n              Удалить\r\n            </ActionSheetItem>\r\n            {osname === IOS && <ActionSheetItem autoclose mode=\"cancel\">Отменить</ActionSheetItem>}\r\n          </ActionSheet>\r\n        ));\r\n    }\r\n    return (    \r\n        \r\n            <Div className=\"Column\">\r\n                <div className='Column-header'>\r\n                    <Header className='ColorWhite'>{name}</Header>\r\n                    <Button \r\n                    className='Column-header__button'\r\n                    mode=\"overlay_outline\" \r\n                    onClick={showPopupColumn}\r\n                    >\r\n                        <Icon24MoreHorizontal/>\r\n                    </Button>\r\n                </div>\r\n                <Card className='Columns__wrapper'>\r\n                    <Div>\r\n                            \r\n                    </Div>\r\n                    <Div>\r\n                    \r\n                        <Cards columnId={id}/>\r\n                    </Div>\r\n                </Card>\r\n            </Div>\r\n            \r\n     \r\n    )\r\n}\r\n\r\nColumn.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n}\r\nexport default Column;\r\n","import React, {useState} from 'react';\r\nimport {Div} from '@vkontakte/vkui';\r\nimport firebase from 'firebase/app';\r\nimport PropTypes from 'prop-types';\r\nimport FormCreate from './FormCreate';\r\nimport './Columns.css';\r\n\r\n\r\nconst ColumnCreate = ({ onCreate, deskId }) => {\r\n\r\n   \r\n    const createColumn = ( name) => {\r\n        \r\n\r\n        const db = firebase.firestore();\r\n        // Add a new document in collection \"cities\"\r\n        return db.collection(\"columns\")\r\n        .add({ name, deskId })\r\n        .then((docRef) => docRef.get())\r\n        .then(doc => {\r\n            onCreate({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            });\r\n            \r\n        })\r\n        .catch(function(error) {\r\n            console.error(\"Error writing document: \", error);\r\n        });\r\n\r\n        \r\n        \r\n    };\r\n\r\n    \r\n    return (\r\n        <Div className=\"Columns\">\r\n            <FormCreate \r\n            onSubmit={createColumn} \r\n            placeholder='Введите название колонки' \r\n            actionTitle='Создать колонку'/>\r\n        </Div>\r\n    )\r\n}\r\n\r\nColumnCreate.propTypes = {\r\n    onCreate: PropTypes.func.isRequired,\r\n    deskId: PropTypes.string.isRequired\r\n}\r\n\r\nexport default ColumnCreate;","import React, {Fragment, useEffect, useState} from 'react';\r\nimport {PanelHeaderSimple, Gallery, PanelHeaderBack} from '@vkontakte/vkui';\r\nimport PropTypes from 'prop-types';\r\nimport Column from './Column';\r\nimport firebase from 'firebase';\r\nimport './Columns.css';\r\nimport ColumnCreate from './ColumnCreate';\r\n\r\nconst Columns = ({ goBack, setColumns, columns, removeColumn, addColumn, desk, setPopout}) => {\r\n    \r\n\r\n    useEffect(()=>{\r\n         \r\n        //Запрос в базу данных за колонками\r\n        const db = firebase.firestore();\r\n        \r\n        db.collection(\"columns\").where('deskId', '==', desk.id).get().then((querySnapshot) => {\r\n            const columns = [];\r\n            querySnapshot.forEach((doc) => {\r\n                const {deskId, name} = doc.data();\r\n                columns.push({\r\n                id: doc.id,\r\n                deskId,\r\n                name,\r\n\r\n                });\r\n            });\r\n            setColumns(columns);\r\n        });\r\n    }, []);\r\n    ////\r\n    return (\r\n        <Fragment>\r\n            <PanelHeaderSimple left={<PanelHeaderBack onClick={goBack}/>}>Доска \"{desk.name}\"</PanelHeaderSimple>\r\n\r\n            \r\n                <Gallery\r\n                className=\"Gallery__in\"\r\n                    slideWidth=\"85%\"\r\n                    align=\"center\"\r\n                  >\r\n                    {columns.map(({id, name }) => <Column setPopout={setPopout} key={id} id={id} name={name} onDelete={removeColumn}/>)}\r\n                    <ColumnCreate deskId={desk.id} onCreate={addColumn}/>\r\n                  </Gallery>\r\n        </Fragment>\r\n    )\r\n}\r\nColumns.propTypes = {\r\n    goBack: PropTypes.func.isRequired,\r\n    setColumns: PropTypes.func.isRequired,\r\n    columns: PropTypes.arrayOf(PropTypes.shape( {\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        deskId: PropTypes.string.isRequired\r\n    })).isRequired,\r\n    removeColumn: PropTypes.func.isRequired,\r\n    addColumn: PropTypes.func.isRequired,\r\n    desk: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired\r\n\r\n    }).isRequired\r\n}\r\nexport default Columns;\r\n","import React, { useState } from 'react';\nimport ErrorBoundary from './ErrorBoundary/ErrorBoundary';\nimport { RouterProvider, useRoute } from 'react-router5';\nimport {Panel, View} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Desks from './Desks';\nimport Columns from './Columns';\nimport './Columns.css';\nconst panels = {\n\tdesks: 'desks',\n\tcolumns: 'columns'\n}\n\n\nconst App = ({ router }) => {\n\tconst [activePanel, setActivePanel] = useState(panels.desks);\n\tconst [activeDesk, setActiveDesk] = useState(null);\n\tconst goToColumns = (deskId) => {\n\t\tsetActivePanel(panels.columns);\n\t\tsetActiveDesk(desks.find( ({id}) => id === deskId ));\n\n\t}\n\n\tconst goToDesks = () => setActivePanel(panels.desks);\n\n\tconst [desks, setDesks] = useState([]);\n    const addDesk = (desk) => setDesks([...desks, desk]);\n\tconst removeDesk = (removeId) => setDesks(desks.filter(({ id }) => id !== removeId));\n\t\n\tconst [columns, setColumns] = useState([]);\n    const addColumn = (column) => setColumns([...columns, column]);\n\tconst removeColumn = (removeId) => setColumns(columns.filter(({ id }) => id !== removeId));\n\t\n\tconst [popout, setPopout] = useState(null);\n\n\tconst a = useRoute();\n\treturn (\n\t\t<RouterProvider router={router}>\n\t\t\t<ErrorBoundary>\n\t\t\t\t<View activePanel={activePanel} header={false} popout={popout}>\n\t\t\t\t\t<Panel id={panels.desks}>\n\t\t\t\t\t\t<Desks \n\t\t\t\t\t\tonChangePanel={goToColumns}\n\t\t\t\t\t\tsetDesks={setDesks}\n\t\t\t\t\t\taddDesk={addDesk}\n\t\t\t\t\t\tremoveDesk={removeDesk}\n\t\t\t\t\t\tdesks={desks}></Desks>\n\t\t\t\t\t</Panel>\n\t\t\t\t\t<Panel id={panels.columns} className=\"Columns\">\n\t\t\t\t\t\t{activeDesk && (\n\t\t\t\t\t\t<Columns \n\t\t\t\t\t\tdesk={activeDesk}\n\t\t\t\t\t\tgoBack={goToDesks}\n\t\t\t\t\t\taddColumn={addColumn}\n\t\t\t\t\t\tsetColumns={setColumns}\n\t\t\t\t\t\tremoveColumn={removeColumn}\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\tsetPopout={setPopout}\n\t\t\t\t\t\t/>)}\n\t\t\t\t\t</Panel>\n\t\t\t\t</View>\n\t\t\t</ErrorBoundary>\n\t\t</RouterProvider>\n\t\t\n\t);\n}\n\nexport default App;\n\n","import createRouter from 'router5';\r\nimport browserPlugin from 'router5-plugin-browser';\r\n\r\nconst routes = [\r\n  { name: 'desks', path: '/' },\r\n  { name: 'columns', path: '/desk' }\r\n];\r\n\r\nexport const initialize = () => {\r\n    const router = createRouter(routes);\r\n\r\n    router.usePlugin(browserPlugin());\r\n\r\n    router.start(); \r\n    return router;\r\n}\r\n\r\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import bridge from \"@vkontakte/vk-bridge\";\n\nimport App from \"./components/App\";\nimport * as router from './router';\nimport * as backend from './models/firebase';\n// Firebase App (the core Firebase SDK) is always required and\n// must be listed before other Firebase SDKs\n\nconst route = router.initialize();\nbackend.init();\n  // Init VK  Mini App\n// bridge.send(\"VKWebAppInit\");\n\n\nReactDOM.render(<App router={route}/>, document.getElementById(\"root\"));\n","import firebase from \"firebase/app\";\r\n\r\nimport 'firebase/analytics';\r\n// Add the Firebase services that you want to use\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n // Your web app's Firebase configuration\r\n  // For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\n\r\nexport const init = () => {\r\n    var firebaseConfig = {\r\n        apiKey: \"AIzaSyBexNnElMx6uIs1WPGK0ljnUPNBNH4s74k\",\r\n        authDomain: \"deskapp-3e13d.firebaseapp.com\",\r\n        databaseURL: \"https://deskapp-3e13d.firebaseio.com\",\r\n        projectId: \"deskapp-3e13d\",\r\n        storageBucket: \"deskapp-3e13d.appspot.com\",\r\n        messagingSenderId: \"762884887001\",\r\n        appId: \"1:762884887001:web:a8cbedeea42a097ccc49c8\",\r\n        measurementId: \"G-BKFCBB4WJQ\"\r\n      };\r\n      // Initialize Firebase\r\n      firebase.initializeApp(firebaseConfig);\r\n      firebase.analytics();\r\n}"],"sourceRoot":""}